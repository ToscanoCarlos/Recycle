This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.gitignore
astro.config.mjs
package.json
postcss.config.js
public/favicon.svg
README.md
src/assets/astro.svg
src/assets/background.svg
src/components/RecyclingMemoryGame.jsx
src/layouts/Layout.astro
src/pages/index.astro
src/styles/global.css
tailwind.config.mjs
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# build output
dist/

# generated types
.astro/

# dependencies
node_modules/

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# environment variables
.env
.env.production

# macOS-specific files
.DS_Store

# jetbrains setting folder
.idea/
</file>

<file path="astro.config.mjs">
// @ts-check
import { defineConfig } from 'astro/config';
import react from '@astrojs/react';
import tailwind from '@astrojs/tailwind';

// https://astro.build/config
export default defineConfig({
  integrations: [
    react(),
    tailwind({
      applyBaseStyles: false,
    })
  ]
});
</file>

<file path="package.json">
{
  "name": "recycle",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev",
    "build": "astro build",
    "preview": "astro preview",
    "astro": "astro"
  },
  "dependencies": {
    "@astrojs/react": "^4.3.0",
    "@astrojs/tailwind": "^5.1.0",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "astro": "^5.12.3",
    "lucide-react": "^0.525.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  },
  "devDependencies": {
    "tailwindcss": "^3.4.0",
    "postcss": "^8.4.0",
    "autoprefixer": "^10.4.0"
  }
}
</file>

<file path="postcss.config.js">
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="public/favicon.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 128 128">
    <path d="M50.4 78.5a75.1 75.1 0 0 0-28.5 6.9l24.2-65.7c.7-2 1.9-3.2 3.4-3.2h29c1.5 0 2.7 1.2 3.4 3.2l24.2 65.7s-11.6-7-28.5-7L67 45.5c-.4-1.7-1.6-2.8-2.9-2.8-1.3 0-2.5 1.1-2.9 2.7L50.4 78.5Zm-1.1 28.2Zm-4.2-20.2c-2 6.6-.6 15.8 4.2 20.2a17.5 17.5 0 0 1 .2-.7 5.5 5.5 0 0 1 5.7-4.5c2.8.1 4.3 1.5 4.7 4.7.2 1.1.2 2.3.2 3.5v.4c0 2.7.7 5.2 2.2 7.4a13 13 0 0 0 5.7 4.9v-.3l-.2-.3c-1.8-5.6-.5-9.5 4.4-12.8l1.5-1a73 73 0 0 0 3.2-2.2 16 16 0 0 0 6.8-11.4c.3-2 .1-4-.6-6l-.8.6-1.6 1a37 37 0 0 1-22.4 2.7c-5-.7-9.7-2-13.2-6.2Z" />
    <style>
        path { fill: #000; }
        @media (prefers-color-scheme: dark) {
            path { fill: #FFF; }
        }
    </style>
</svg>
</file>

<file path="README.md">
# Green Battle: Recycling Word Hunt

A naval battle-style word search game focused on recycling and environmental awareness.

## üéÆ How to Play

1. Find 6 recycling-related words hidden in the 10x10 grid
2. Click cells to select them (they turn light green)
3. Select all letters of a word in sequence to find it
4. Words can be horizontal or vertical
5. Found words turn bright green and get crossed out
6. Find all words to win!

## üå± Words to Find

- RECYCLE
- REUSE
- ORGANIC
- PLASTIC
- GLASS
- UPCYCLE

## üöÄ Getting Started

\`\`\`bash
npm install
npm run dev
\`\`\`

## üõ†Ô∏è Built With

- Astro
- Vanilla JavaScript
- CSS Grid
- Green color palette for environmental theme

## üì± Features

- Responsive design
- Smooth animations
- Score tracking
- Reset functionality
- Mobile-friendly interface
</file>

<file path="src/assets/astro.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="115" height="48"><path fill="#17191E" d="M7.77 36.35C6.4 35.11 6 32.51 6.57 30.62c.99 1.2 2.35 1.57 3.75 1.78 2.18.33 4.31.2 6.33-.78.23-.12.44-.27.7-.42.18.55.23 1.1.17 1.67a4.56 4.56 0 0 1-1.94 3.23c-.43.32-.9.61-1.34.91-1.38.94-1.76 2.03-1.24 3.62l.05.17a3.63 3.63 0 0 1-1.6-1.38 3.87 3.87 0 0 1-.63-2.1c0-.37 0-.74-.05-1.1-.13-.9-.55-1.3-1.33-1.32a1.56 1.56 0 0 0-1.63 1.26c0 .06-.03.12-.05.2Z"/><path fill="url(#a)" d="M7.77 36.35C6.4 35.11 6 32.51 6.57 30.62c.99 1.2 2.35 1.57 3.75 1.78 2.18.33 4.31.2 6.33-.78.23-.12.44-.27.7-.42.18.55.23 1.1.17 1.67a4.56 4.56 0 0 1-1.94 3.23c-.43.32-.9.61-1.34.91-1.38.94-1.76 2.03-1.24 3.62l.05.17a3.63 3.63 0 0 1-1.6-1.38 3.87 3.87 0 0 1-.63-2.1c0-.37 0-.74-.05-1.1-.13-.9-.55-1.3-1.33-1.32a1.56 1.56 0 0 0-1.63 1.26c0 .06-.03.12-.05.2Z"/><path fill="#17191E" d="M.02 30.31s4.02-1.95 8.05-1.95l3.04-9.4c.11-.45.44-.76.82-.76.37 0 .7.31.82.76l3.04 9.4c4.77 0 8.05 1.95 8.05 1.95L17 11.71c-.2-.56-.53-.91-.98-.91H7.83c-.44 0-.76.35-.97.9L.02 30.31Zm42.37-5.97c0 1.64-2.05 2.62-4.88 2.62-1.85 0-2.5-.45-2.5-1.41 0-1 .8-1.49 2.65-1.49 1.67 0 3.09.03 4.73.23v.05Zm.03-2.04a21.37 21.37 0 0 0-4.37-.36c-5.32 0-7.82 1.25-7.82 4.18 0 3.04 1.71 4.2 5.68 4.2 3.35 0 5.63-.84 6.46-2.92h.14c-.03.5-.05 1-.05 1.4 0 1.07.18 1.16 1.06 1.16h4.15a16.9 16.9 0 0 1-.36-4c0-1.67.06-2.93.06-4.62 0-3.45-2.07-5.64-8.56-5.64-2.8 0-5.9.48-8.26 1.19.22.93.54 2.83.7 4.06 2.04-.96 4.95-1.37 7.2-1.37 3.11 0 3.97.71 3.97 2.15v.57Zm11.37 3c-.56.07-1.33.07-2.12.07-.83 0-1.6-.03-2.12-.1l-.02.58c0 2.85 1.87 4.52 8.45 4.52 6.2 0 8.2-1.64 8.2-4.55 0-2.74-1.33-4.09-7.2-4.39-4.58-.2-4.99-.7-4.99-1.28 0-.66.59-1 3.65-1 3.18 0 4.03.43 4.03 1.35v.2a46.13 46.13 0 0 1 4.24.03l.02-.55c0-3.36-2.8-4.46-8.2-4.46-6.08 0-8.13 1.49-8.13 4.39 0 2.6 1.64 4.23 7.48 4.48 4.3.14 4.77.62 4.77 1.28 0 .7-.7 1.03-3.71 1.03-3.47 0-4.35-.48-4.35-1.47v-.13Zm19.82-12.05a17.5 17.5 0 0 1-6.24 3.48c.03.84.03 2.4.03 3.24l1.5.02c-.02 1.63-.04 3.6-.04 4.9 0 3.04 1.6 5.32 6.58 5.32 2.1 0 3.5-.23 5.23-.6a43.77 43.77 0 0 1-.46-4.13c-1.03.34-2.34.53-3.78.53-2 0-2.82-.55-2.82-2.13 0-1.37 0-2.65.03-3.84 2.57.02 5.13.07 6.64.11-.02-1.18.03-2.9.1-4.04-2.2.04-4.65.07-6.68.07l.07-2.93h-.16Zm13.46 6.04a767.33 767.33 0 0 1 .07-3.18H82.6c.07 1.96.07 3.98.07 6.92 0 2.95-.03 4.99-.07 6.93h5.18c-.09-1.37-.11-3.68-.11-5.65 0-3.1 1.26-4 4.12-4 1.33 0 2.28.16 3.1.46.03-1.16.26-3.43.4-4.43-.86-.25-1.81-.41-2.96-.41-2.46-.03-4.26.98-5.1 3.38l-.17-.02Zm22.55 3.65c0 2.5-1.8 3.66-4.64 3.66-2.81 0-4.61-1.1-4.61-3.66s1.82-3.52 4.61-3.52c2.82 0 4.64 1.03 4.64 3.52Zm4.71-.11c0-4.96-3.87-7.18-9.35-7.18-5.5 0-9.23 2.22-9.23 7.18 0 4.94 3.49 7.59 9.21 7.59 5.77 0 9.37-2.65 9.37-7.6Z"/><defs><linearGradient id="a" x1="6.33" x2="19.43" y1="40.8" y2="34.6" gradientUnits="userSpaceOnUse"><stop stop-color="#D83333"/><stop offset="1" stop-color="#F041FF"/></linearGradient></defs></svg>
</file>

<file path="src/assets/background.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="1440" height="1024" fill="none"><path fill="url(#a)" fill-rule="evenodd" d="M-217.58 475.75c91.82-72.02 225.52-29.38 341.2-44.74C240 415.56 372.33 315.14 466.77 384.9c102.9 76.02 44.74 246.76 90.31 366.31 29.83 78.24 90.48 136.14 129.48 210.23 57.92 109.99 169.67 208.23 155.9 331.77-13.52 121.26-103.42 264.33-224.23 281.37-141.96 20.03-232.72-220.96-374.06-196.99-151.7 25.73-172.68 330.24-325.85 315.72-128.6-12.2-110.9-230.73-128.15-358.76-12.16-90.14 65.87-176.25 44.1-264.57-26.42-107.2-167.12-163.46-176.72-273.45-10.15-116.29 33.01-248.75 124.87-320.79Z" clip-rule="evenodd" style="opacity:.154"/><path fill="url(#b)" fill-rule="evenodd" d="M1103.43 115.43c146.42-19.45 275.33-155.84 413.5-103.59 188.09 71.13 409 212.64 407.06 413.88-1.94 201.25-259.28 278.6-414.96 405.96-130 106.35-240.24 294.39-405.6 265.3-163.7-28.8-161.93-274.12-284.34-386.66-134.95-124.06-436-101.46-445.82-284.6-9.68-180.38 247.41-246.3 413.54-316.9 101.01-42.93 207.83 21.06 316.62 6.61Z" clip-rule="evenodd" style="opacity:.154"/><defs><linearGradient id="b" x1="373" x2="1995.44" y1="1100" y2="118.03" gradientUnits="userSpaceOnUse"><stop stop-color="#D83333"/><stop offset="1" stop-color="#F041FF"/></linearGradient><linearGradient id="a" x1="107.37" x2="1130.66" y1="1993.35" y2="1026.31" gradientUnits="userSpaceOnUse"><stop stop-color="#3245FF"/><stop offset="1" stop-color="#BC52EE"/></linearGradient></defs></svg>
</file>

<file path="src/components/RecyclingMemoryGame.jsx">
import React, { useState, useEffect } from 'react';
import { Recycle, Trash2, Battery, Leaf, Package, Wine, Shirt, Wrench } from 'lucide-react';

const RecyclingMemoryGame = () => {
  // Game cards data based on the PDF content - concept + example pairs
  const cardPairs = [
    // Organic Waste pair
    { id: 1, type: 'organic', icon: Leaf, text: 'Organic Waste', color: 'bg-green-500', pairType: 'concept' },
    { id: 1, type: 'organic', icon: 'üçé', text: 'Apple Core', color: 'bg-green-400', pairType: 'example' },
    
    // Recyclable pair
    { id: 2, type: 'recyclable', icon: Recycle, text: 'Recyclable Materials', color: 'bg-blue-500', pairType: 'concept' },
    { id: 2, type: 'recyclable', icon: 'ü•§', text: 'Plastic Bottle', color: 'bg-blue-400', pairType: 'example' },
    
    // Non-recyclable pair
    { id: 3, type: 'non-recyclable', icon: Trash2, text: 'Non-Recyclable', color: 'bg-gray-500', pairType: 'concept' },
    { id: 3, type: 'non-recyclable', icon: 'üßª', text: 'Dirty Tissues', color: 'bg-gray-400', pairType: 'example' },
    
    // Hazardous waste pair
    { id: 4, type: 'hazardous', icon: Battery, text: 'Hazardous Waste', color: 'bg-red-500', pairType: 'concept' },
    { id: 4, type: 'hazardous', icon: 'üîã', text: 'Used Battery', color: 'bg-red-400', pairType: 'example' },
    
    // Glass reuse pair
    { id: 5, type: 'glass', icon: Wine, text: 'Glass Reuse', color: 'bg-cyan-500', pairType: 'concept' },
    { id: 5, type: 'glass', icon: 'ü´ô', text: 'Glass Jar', color: 'bg-cyan-400', pairType: 'example' },
    
    // Fabric reuse pair
    { id: 6, type: 'fabric', icon: Shirt, text: 'Fabric Reuse', color: 'bg-purple-500', pairType: 'concept' },
    { id: 6, type: 'fabric', icon: 'üëï', text: 'Old T-Shirt', color: 'bg-purple-400', pairType: 'example' },
    
    // Upcycling pair
    { id: 7, type: 'upcycle', icon: Wrench, text: 'Upcycling', color: 'bg-orange-500', pairType: 'concept' },
    { id: 7, type: 'upcycle', icon: 'ü™ë', text: 'Pallet Furniture', color: 'bg-orange-400', pairType: 'example' },
    
    // Paper recyclable pair
    { id: 8, type: 'paper', icon: Package, text: 'Paper Recycling', color: 'bg-indigo-500', pairType: 'concept' },
    { id: 8, type: 'paper', icon: 'üì¶', text: 'Cardboard Box', color: 'bg-indigo-400', pairType: 'example' }
  ];

  // Create pairs of cards (cards are already paired conceptually)
  const createGameCards = () => {
    const shuffledCards = [...cardPairs].sort(() => Math.random() - 0.5);
    return shuffledCards.map((card, index) => ({
      ...card,
      uniqueId: `card-${index}`
    }));
  };

  const [cards, setCards] = useState(createGameCards());
  const [flippedCards, setFlippedCards] = useState([]);
  const [matchedCards, setMatchedCards] = useState([]);
  const [moves, setMoves] = useState(0);
  const [gameWon, setGameWon] = useState(false);

  // Handle card click
  const handleCardClick = (clickedCard) => {
    if (flippedCards.length === 2) return;
    if (flippedCards.some(card => card.uniqueId === clickedCard.uniqueId)) return;
    if (matchedCards.includes(clickedCard.type)) return;

    const newFlippedCards = [...flippedCards, clickedCard];
    setFlippedCards(newFlippedCards);

    if (newFlippedCards.length === 2) {
      setMoves(moves + 1);
      
      // Check if cards match
      if (newFlippedCards[0].type === newFlippedCards[1].type) {
        setMatchedCards([...matchedCards, newFlippedCards[0].type]);
        setFlippedCards([]);
      } else {
        // Hide cards after 1 second if they don't match
        setTimeout(() => {
          setFlippedCards([]);
        }, 1000);
      }
    }
  };

  // Check if game is won
  useEffect(() => {
    if (matchedCards.length === 8 && matchedCards.length > 0) { // 8 pairs matched
      setGameWon(true);
    }
  }, [matchedCards]);

  // Reset game
  const resetGame = () => {
    setCards(createGameCards());
    setFlippedCards([]);
    setMatchedCards([]);
    setMoves(0);
    setGameWon(false);
  };

  // Check if card should be visible
  const isCardVisible = (card) => {
    return flippedCards.some(flipped => flipped.uniqueId === card.uniqueId) || 
           matchedCards.includes(card.type);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-4">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-green-800 mb-2 flex items-center justify-center gap-2">
            <Recycle className="text-green-600" />
            Recycling Memory Game
          </h1>
          <p className="text-lg text-gray-600 mb-4">
            Match pairs of recycling and reuse concepts to win!
          </p>
          <div className="flex justify-center gap-4 items-center">
            <span className="bg-white px-4 py-2 rounded-lg shadow text-lg font-semibold">
              Moves: {moves}
            </span>
            <button
              onClick={resetGame}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-semibold transition-colors"
            >
              New Game
            </button>
          </div>
        </div>

        {/* Game Board */}
        <div className="grid grid-cols-4 gap-4 max-w-2xl mx-auto mb-8">
          {cards.map((card) => {
            const IconComponent = card.icon;
            const visible = isCardVisible(card);
            
            return (
              <div
                key={card.uniqueId}
                onClick={() => handleCardClick(card)}
                className={`
                  aspect-square cursor-pointer rounded-xl shadow-lg transition-all duration-300 transform hover:scale-105
                  ${visible 
                    ? `${card.color} text-white` 
                    : 'bg-gradient-to-br from-gray-300 to-gray-400 hover:from-gray-400 hover:to-gray-500'
                  }
                  ${matchedCards.includes(card.type) ? 'ring-4 ring-yellow-400' : ''}
                `}
              >
                <div className="h-full flex flex-col items-center justify-center p-2">
                  {visible ? (
                    <>
                      {typeof card.icon === 'string' ? (
                        <div className="text-3xl mb-2">{card.icon}</div>
                      ) : (
                        <IconComponent size={32} className="mb-2" />
                      )}
                      <span className="text-xs font-semibold text-center leading-tight">
                        {card.text}
                      </span>
                    </>
                  ) : (
                    <Recycle size={32} className="text-gray-600" />
                  )}
                </div>
              </div>
            );
          })}
        </div>

        {/* Game Won Modal */}
        {gameWon && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-2xl p-8 text-center shadow-2xl max-w-md mx-4">
              <div className="text-6xl mb-4">üéâ</div>
              <h2 className="text-3xl font-bold text-green-800 mb-2">Congratulations!</h2>
              <p className="text-lg text-gray-600 mb-4">
                You completed the recycling memory game in {moves} moves!
              </p>
              <p className="text-sm text-gray-500 mb-6">
                Remember: Every small action matters for our planet! üåç
              </p>
              <button
                onClick={resetGame}
                className="bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg font-semibold text-lg transition-colors"
              >
                Play Again
              </button>
            </div>
          </div>
        )}

        {/* Instructions */}
        <div className="bg-white rounded-xl shadow-lg p-6 max-w-2xl mx-auto">
          <h3 className="text-xl font-bold text-gray-800 mb-3">How to Play:</h3>
          <ul className="text-gray-600 space-y-2">
            <li>‚Ä¢ Click on cards to flip them and reveal recycling concepts</li>
            <li>‚Ä¢ Find matching pairs: each recycling concept with its example</li>
            <li>‚Ä¢ Match all 8 pairs to win the game</li>
            <li>‚Ä¢ Try to complete it in as few moves as possible!</li>
          </ul>
          
          <h3 className="text-xl font-bold text-gray-800 mb-3 mt-6">Match These Pairs:</h3>
          <div className="grid grid-cols-1 gap-2 text-sm">
            <div className="flex items-center justify-between bg-green-50 p-2 rounded">
              <span className="flex items-center gap-2">
                <Leaf size={16} className="text-green-600" />
                Organic Waste
              </span>
              <span className="flex items-center gap-2">
                üçé Apple Core
              </span>
            </div>
            <div className="flex items-center justify-between bg-blue-50 p-2 rounded">
              <span className="flex items-center gap-2">
                <Recycle size={16} className="text-blue-600" />
                Recyclable Materials
              </span>
              <span className="flex items-center gap-2">
                ü•§ Plastic Bottle
              </span>
            </div>
            <div className="flex items-center justify-between bg-gray-50 p-2 rounded">
              <span className="flex items-center gap-2">
                <Trash2 size={16} className="text-gray-600" />
                Non-Recyclable
              </span>
              <span className="flex items-center gap-2">
                üßª Dirty Tissues
              </span>
            </div>
            <div className="flex items-center justify-between bg-red-50 p-2 rounded">
              <span className="flex items-center gap-2">
                <Battery size={16} className="text-red-600" />
                Hazardous Waste
              </span>
              <span className="flex items-center gap-2">
                üîã Used Battery
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RecyclingMemoryGame;
</file>

<file path="src/layouts/Layout.astro">
---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Recycling Memory Game" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
</file>

<file path="src/pages/index.astro">
---
import Layout from '../layouts/Layout.astro';
import RecyclingMemoryGame from '../components/RecyclingMemoryGame.jsx';
---

<Layout title="Recycling Memory Game">
  <RecyclingMemoryGame client:load />
</Layout>
</file>

<file path="src/styles/global.css">
@import "tailwindcss";
@tailwind utilities;
</file>

<file path="tailwind.config.mjs">
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}',
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
</file>

<file path="tsconfig.json">
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "target": "ES6",
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "react-jsx",
    "jsxImportSource": "react",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
</file>

</files>
